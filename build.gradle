plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'me.champeau.jmh' version '0.7.3'
}

group = 'com.alshubaily.fintech'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.tigerbeetle:tigerbeetle-java:0.16.31'

	implementation 'org.postgresql:postgresql:42.6.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-crypto:6.2.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation platform('org.junit:junit-bom:5.10.0')
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly  'org.junit.jupiter:junit-jupiter-engine'

	testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
	testImplementation 'org.assertj:assertj-core:3.24.2'


//	testImplementation 'org.openjdk.jmh:jmh-core:1.36'
//	testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.36'

}

sourceSets {
	integrationTest {
		java.srcDir 'src/test/java' // Using src/test/java for simplicity
		resources.srcDir 'src/test/resources'
		compileClasspath += sourceSets.test.output
		runtimeClasspath += sourceSets.test.output
	}
}

tasks.register('e2eTest', Test) {
	group = 'verification'
	description = 'Runs the E2E tests.'
	useJUnitPlatform()
	testClassesDirs = sourceSets.integrationTest.output.classesDirs
	classpath = sourceSets.integrationTest.runtimeClasspath
}

//tasks.register("loadTest", JavaExec) {
//	group = "benchmark"
//	description = "Runs the JMH load tests using the test source set"
//	dependsOn tasks.named("jmhJar")
//	mainClass.set("org.openjdk.jmh.Main")
//	classpath = files("build/libs/${project.name}-${project.version}-jmh.jar") + sourceSets.test.runtimeClasspath
//	args = [
//			"-t", "50",
//			"-wi", "3",
//			"-w", "5s",
//			"-i", "3",
//			"-r", "10s",
//			"-f", "3",
//			"-rf", "json",
//			"-rff", "load_test_report.json"
//	]
//}
